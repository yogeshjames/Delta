const gridContainer = document.getElementById('gridContainer');
for (let i = 0; i <= 63; i++) {
  const box = document.createElement('div');
  box.classList.add('box', `box-${i}`);
  box.style.backgroundImage = "none";
  gridContainer.appendChild(box);
}  
function blue(){
for (let i = 0; i <= 63; i++) {
document.querySelector(`.box-${i}`).style.backgroundColor = "#64c5e6";

}
}
document.querySelector('.box-3').style.backgroundImage = "url('TITAN.png')";
document.querySelector('.box-12').style.backgroundImage = "url('CANON1.svg')";
document.querySelector('.box-12').style.backgroundPosition = '10% 40%'; 
 document.querySelector('.box-10').style.backgroundImage =  "url('shield.png')";
document.querySelector('.box-13').style.backgroundImage = "url('rok1.svg')";
document.querySelector('.box-15').style.backgroundImage = "url('tri.svg')";
document.querySelector('.box-63').style.backgroundImage = "url('canon2.svg')";
document.querySelector('.box-49').style.backgroundImage = "url('castle2.svg')";
document.querySelector('.box-52').style.backgroundImage =  "url('shield2.svg')";
document.querySelector('.box-54').style.backgroundImage = "url('rok2.svg')";
document.querySelector('.box-50').style.backgroundImage = "url('tri2.svg')";

//--------------------------------------------------------------------------------------------------------------------------------------
document.querySelector('.bullet').style.top = '90px';
document.querySelector('.bullet').style.left = '670px';
var posx = document.querySelector('.bullet').style.top;
var numberX = parseInt(posx, 10);
var currentAnimationFrame;
var bullet = document.querySelector('.bullet');
var flags = {
  s: 1,
  flag: 1,
  shield: 1,
  collision: 0,
  direc: ""
};

function centerBulletInDiv(toti) {
  let targetDiv = document.querySelector(`.box-${toti}`);
  let targetRect = targetDiv.getBoundingClientRect();
  let bulletRect = bullet.getBoundingClientRect();

  let centeredLeft = targetRect.left + (targetRect.width / 2) - (bulletRect.width / 2);
  let centeredTop = targetRect.top + (targetRect.height / 2) - (bulletRect.height / 2);

  bullet.style.left = `${centeredLeft}px`;
  bullet.style.top = `${centeredTop}px`;
}

centerBulletInDiv(3);

function Shoot() {
  numberX += 5;
  document.querySelector('.bullet').style.top = numberX + 'px';
  console.log(1);
  if (flags.shield == 0) {
    return;
  }
  if (flags.s === 1) {
    callGameFunctions([3, 2, 5, 6]);
    collison(0,1,5);
    collison(7,8,5);
    
  }

  const a = (document.querySelector(`.box-${inp[0]}`).style.backgroundImage.includes("rok1.svg") && flags.flag == 0);
  const c = (document.querySelector(`.box-${inp[0]}`).style.backgroundImage.includes("rok.svg") && flags.flag == 0);
  const b = (document.querySelector(`.box-${inp[1]}`).style.backgroundImage.includes("tri.svg")&& flags.flag == 2);
  
  const d = (document.querySelector(`.box-${inp[7]}`).style.backgroundImage.includes("rok2.svg") && flags.flag == 3);
  const e = (document.querySelector(`.box-${inp[7]}`).style.backgroundImage.includes("rok3.svg") && flags.flag == 3);
  const f = (document.querySelector(`.box-${inp[8]}`).style.backgroundImage.includes("tri2.svg")&& flags.flag == 5);
  
  console.log(c);

  if (numberX > 830) {
    document.querySelector('.bullet').style.visibility = "hidden";
    setTimeout(function() {
      document.querySelector('.bullet').style.visibility = "visible";
      document.querySelector('.bullet').style.top = '90px';
      numberX = 90;
    }, 500);
  } else if (flags.s === 1) {
    currentAnimationFrame = requestAnimationFrame(Shoot);
  }
  if (flags.s == 0) {
    console.log(c);
    console.log(a);
    if (c || e) {
      //bullet.style.top = (parseInt(bullet.style.top) + 25) + 'px';
      //setTimeout(() => moveLeftbullet(), 10);
      moveLeftbullet()
      flags.direc = "left";
      flags.collision = 0;
    } else if (a || d) {
      //bullet.style.top = (parseInt(bullet.style.top) + 25) + 'px';
      //setTimeout(() => moveRightbullet(), 10);
      moveRightbullet()
      flags.direc = "right";
      flags.collision = 0;
      console.log(1);
    } else if ((b && (rotation == 270 || rotation == -90)) || (f && (rotationb == 270 || rotationb == -90))){
      //bullet.style.top = (parseInt(bullet.style.top) + 25) + 'px';
      //setTimeout(() => moveLeftbullet(), 10);
      moveLeftbullet()
      flags.direc = "left";
      flags.collision = 0;
    } else if( (b && rotation == 0)|| (f && rotationb == 0)){
      //bullet.style.top = (parseInt(bullet.style.top) + 25) + 'px';
     // setTimeout(() => moveRightbullet(), 10);
     moveRightbullet()
      flags.direc = "right";
      flags.collision = 0;
      console.log(1);
    }
    else if (b || f) {
      reset();
    }
  }
}
function callGameFunctions(gameNumbers) {
  gameNumbers.forEach(function(gameNumber) {
    game(gameNumber);
  });
}










function reset() {
  cancelAnimationFrame(currentAnimationFrame);
  findDivWithImage();
  let di = document.querySelector(`.box-${inp[4]}`);
  let it = di.getBoundingClientRect();
  //console.log(it.left + 33);
  bullet.style.left = (it.left + 33) + 'px';
  flags.s = 1;
  flags.flag= 1;
  flags.shield= 1;
  flags.collision= 0;
  flags.direc="";
  //console.log(769679);
  document.querySelector('.bullet').style.top = '90px';
  numberX = 90; // Reset top position
  return;
}
var countl=0;
function moveLeftbullet() {
  cancelAnimationFrame(currentAnimationFrame); // Cancel any ongoing animation
  var leftbullet = parseInt(bullet.style.left);
  
  leftbullet -= 5;
  countl++; 
  bullet.style.left = leftbullet + 'px';
  flags.flag = 1;
  flags.collision= 0;
  /* if(countl>15){
    callGameFunctions([3, 2, 5, 6]);
   collison(0,1,25);
  collison(7,8,25);
    countl=0;
    console.log(flags.collision)
    if(flags.collision==1 || flags.collision==2){flags.direc="left";gamecollision(); return;} }*/
  if (leftbullet < 330 || flags.shield == 0) {
    reset();
    countl=0;
    console.log(1);
    return;
  } else {
    currentAnimationFrame = requestAnimationFrame(moveLeftbullet);
    
  }
}


var countr=0;
function moveRightbullet() {
  cancelAnimationFrame(currentAnimationFrame); // Cancel any ongoing animation
  var leftbullet = parseInt(bullet.style.left);
  leftbullet += 5;
  countr++;
  bullet.style.left = leftbullet + 'px';
  flags.flag = 1;
  flags.collision= 0;
 // collison();
 /*if(countr>15){
  callGameFunctions([3, 2, 5, 6]);
  collison(0,1,50);
  collison(7,8,50);
  countr=0;
  console.log(flags.collision)
  if(flags.collision==1 || flags.collision==2){ flags.direc="right"; gamecollision(); return;}} */

  if (leftbullet > 1110 || flags.shield == 0) {
    reset();
    countr=0;
    return;
  } else {
    currentAnimationFrame = requestAnimationFrame(moveRightbullet); // Continue moving right
    //console.log(bullet.style.left);
   
  }
}
/*var countt=0;
function moveUpbullet() {
  cancelAnimationFrame(currentAnimationFrame); 
    var topbullet = parseInt(bullet.style.top);
  topbullet -= 5;
  countt++;
  bullet.style.top = topbullet + 'px';
  flags.flag = 1;
  flags.collision= 0;
  callGameFunctions([3, 2, 5, 6]);
 if(countt>15){
  console.log(56656)
  callGameFunctions([3, 2, 5, 6]);
  collison(0,1,50);
  collison(7,8,25);
  countt=0;
  console.log(flags.collision)
  if(flags.collision==1 || flags.collision==2){ flags.direc="up"; gamecollision(); return;}} 

  if (topbullet < 90 || flags.shield == 0) {
    reset();
    console.log(1);
    countt=0; 
    return;
  } else {
    currentAnimationFrame = requestAnimationFrame(moveUpbullet);
    // Continue moving up
  }
}
var countd=0;
function moveDownbullet() {
  cancelAnimationFrame(currentAnimationFrame); 
  var topbullet = parseInt(bullet.style.top);
  topbullet += 5;
  countt++;
 bullet.style.left =  (bullet.style.left+60) + 'px';
  bullet.style.top = topbullet + 'px';
  flags.flag = 1;
  flags.collision= 0;
  if(countd>15){
    console.log(56656)
    callGameFunctions([3, 2, 5, 6]);
    collison(0,1,50);
    collison(7,8,50);
    countd=0;
    console.log(flags.collision)
    if(flags.collision==1 || flags.collision==2){ flags.direc="down";gamecollision(); return;}}
  if (topbullet > 830 || flags.shield == 0) { 
    reset();
    console.log(1);
    countd=0;
    return;
  } else {
    currentAnimationFrame = requestAnimationFrame(moveDownbullet); // Continue moving down
  }
}*/
function game(pos){
  let div1 = document.querySelector('.bullet');
  let bulletPosition = div1.getBoundingClientRect();
  findDivWithImage();
  //console.log(pos);
  //console.log(inp[pos]);
  let divric = document.querySelector(`.box-${inp[pos]}`);
  let inpPosition = divric.getBoundingClientRect();
 //console.log(Math.abs(Math.abs(inpPosition.top) - Math.abs(bulletPosition.top)));
  //console.log(Math.abs(Math.abs(inpPosition.left) - Math.abs(bulletPosition.left)));
 //console.log(Math.abs(inpPosition.top) - Math.abs(bulletPosition.top) < 25 && Math.abs(Math.abs(inpPosition.left) - Math.abs(bulletPosition.left)) < 34);
  if (Math.abs(Math.abs(inpPosition.top) - Math.abs(bulletPosition.top)) < 5 && Math.abs(Math.abs(inpPosition.left) - Math.abs(bulletPosition.left)) < 34) {
      console.log('Collision detected! Stopping shooting.');
      //alert(1);
      if(pos==2||pos==6){
       // document.querySelector(`.box-${inp[pos]}`).style.backgroundImage="none";
        alert("game over")
      }
      if(pos==3||pos==5){
         reset();
         flags.shield=0;
          console.log("shield")
          return;
  }
}
}
function collison(repa,repb,limitx) {
    let div1 = document.querySelector('.bullet');
    let bulletPosition = div1.getBoundingClientRect();
    findDivWithImage();
    //console.log(inp);
    let divric = document.querySelector(`.box-${inp[repa]}`);
    let divtri = document.querySelector(`.box-${inp[repb]}`);
    let inpPosition = divric.getBoundingClientRect();
    let triPosition = divtri.getBoundingClientRect(); 
    console.log(Math.abs(inpPosition.top) - Math.abs(bulletPosition.top));
    console.log(Math.abs(Math.abs(inpPosition.left) - Math.abs(bulletPosition.left)));
    if (Math.abs(Math.abs(inpPosition.top) - Math.abs(bulletPosition.top)) < limitx && Math.abs(Math.abs(inpPosition.left) - Math.abs(bulletPosition.left)) < 38) {
        console.log('Collision detected! Stopping shooting.');
        flags.s = 0;
        if(repa==0){
        flags.flag = 0;}
        else{
          flags.flag = 3;
        }
       flags.collision=1;
    }
   // console.log(Math.abs(triPosition.top) - Math.abs(bulletPosition.top));
   // console.log(Math.abs(Math.abs(triPosition.left) - Math.abs(bulletPosition.left)));
   // console.log(Math.abs(triPosition.top) - Math.abs(bulletPosition.top) < 5 && Math.abs(Math.abs(triPosition.left) - Math.abs(bulletPosition.left)) < 33);
    if (Math.abs(Math.abs(triPosition.top) - Math.abs(bulletPosition.top)) < limitx && Math.abs(Math.abs(triPosition.left) - Math.abs(bulletPosition.left)) < 38) {
        console.log('Collision detected! Stopping shooting.');
        flags.s = 0;
        if(repb==1){
        flags.flag = 2;}
        else{
          flags.flag = 5;
        }
        flags.collision=2;
    }
}

var inp = []

function findDivWithImage() {
    for (let i = 0; i <= 63; i++) {
        var div = document.querySelector(`.box-${i}`).style.backgroundImage;
        if (div.includes("rok.svg") || div.includes("rok1.svg")) {
            inp[0] = i;
        }
        if (div.includes("tri.svg")) {
            inp[1] = i;
        }
        if (div.includes("CANON1.svg")) {
            inp[2] = i;
           
        }

        if (div.includes("shield.png")) {
          inp[3] = i;
        }
        if (div.includes("TITAN.png")) {
            inp[4] = i;
          }
         if (div.includes("shield2.svg")) {
              inp[5] = i;
        }
        if (div.includes("castle2.svg")) {
          inp[6] = i;
      }
      if (div.includes("rok2.svg") || div.includes("rok3.svg")) {
        inp[7] = i;
    }
    if (div.includes("tri2.svg")) {
      inp[8] = i;
  }
    }
  }


findDivWithImage();

function gamecollision() {
  cancelAnimationFrame(currentAnimationFrame);
  findDivWithImage();
  let a = (document.querySelector(`.box-${inp[0]}`).style.backgroundImage.includes("rok1.svg") && flags.flag == 0);
  let c = (document.querySelector(`.box-${inp[0]}`).style.backgroundImage.includes("rok.svg") && flags.flag == 0);
  let b = (document.querySelector(`.box-${inp[1]}`).style.backgroundImage.includes("tri.svg") && flags.flag == 2);
  
  const d = (document.querySelector(`.box-${inp[7]}`).style.backgroundImage.includes("rok2.svg") && flags.flag == 3);
  const e = (document.querySelector(`.box-${inp[7]}`).style.backgroundImage.includes("rok3.svg") && flags.flag == 3);
  const f = (document.querySelector(`.box-${inp[8]}`).style.backgroundImage.includes("tri2.svg")&& flags.flag == 5);
  

  console.log(1223);
  console.log(flags.collision);

  // Handle collision type 1
  if (flags.collision == 1) {
    cancelAnimationFrame(currentAnimationFrame);
    switch (flags.direc) {
      case "left":
        if (c || e) {
          bullet.style.left = (parseInt(bullet.style.left) + 25) + 'px';
          setTimeout(() => moveDownbullet(), 10); 
        }
        if (a || d) {
          bullet.style.left = (parseInt(bullet.style.left) + 25) + 'px';
          setTimeout(() => moveUpbullet(), 10); 
        }
        return;
      case "right":
        if (c || e) {
          bullet.style.left = (parseInt(bullet.style.left) + 25) + 'px';
          setTimeout(() => moveUpbullet(), 10); 
        }
        if (a || d) {
          bullet.style.left = (parseInt(bullet.style.left) + 25) + 'px';
          setTimeout(() => moveDownbullet(), 10); 
        }
        return;
      case "up":
          if(c || e){
            moveRightbullet();
          }
          if(a ||d){
            moveLeftbullet();
          }
          return;
      case "down":
         if(c ||e){
          moveLeftbullet();
         }
         if(a ||d){
          moveRightbullet()
        }
        return;
    }
  }

  if (flags.collision == 2) {
    cancelAnimationFrame(currentAnimationFrame);
    switch (flags.direc) {
      case "right":
        if ((b && (rotation == 270 || rotation == -90)) || (f && (rotationb == 270 || rotationb == -90))) {
          bullet.style.left = (parseInt(bullet.style.left) + 25) + 'px';
          setTimeout(() => moveUpbullet(), 10); // Delay before moving up
        } else if ((b && (rotation == 180 || rotation == -180)) || (f && (rotationb == 180 || rotationb == -180))) {
          bullet.style.left = (parseInt(bullet.style.left) + 25) + 'px';
          setTimeout(() => moveDownbullet(), 10); // Delay before moving down
        } else {
          reset();
        }
        return;
      case "left":
        if ((b && (rotation == -270 || rotation == 90))|| (f && (rotationb == -270 || rotationb == 90))) {
          bullet.style.left = (parseInt(bullet.style.left) +25 ) + 'px';
          setTimeout(() => moveDownbullet(), 10); // Delay before moving down
        } else if ((b && rotation == 0) || (f && rotationb == 0)) {
         bullet.style.left = (parseInt(bullet.style.left) + 25) + 'px';
          setTimeout(() => moveUpbullet(), 10); // Delay before moving up
        } else {
          reset();
        }
        return;
    }
  }
}





///CANON11///////


// Move the image to the right
function moveR(Boxc , rig) {
   if(Boxc!==0){
 document.querySelector(`.box-${Boxc - 1}`).style.backgroundColor = "#64c5e6";
}
 document.querySelector(`.box-${Boxc + 1}`).style.backgroundColor = "#64c5e6";
 // Add an event listener to the left box
 document.querySelector(`.box-${Boxc}`).removeEventListener('click', clickHandlerc);

     // Remove the background image from the current box and set it to the left box
     document.querySelector(`.box-${Boxc}`).style.backgroundImage = "none";
     document.querySelector(`.box-${Boxc + (rig)}`).style.backgroundImage = "url('TITAN.png')";
     Boxc= Boxc + (rig);
    // pos = Boxc;
     console.log(4554)
     document.querySelector(`.box-${Boxc}`).addEventListener('click', clickHandlerc);
     reset();
      Shoot();
    
}


var currentBoxc = 3;

document.querySelector(`.box-${currentBoxc}`).addEventListener('click', clickHandlerc);

function highlightAdjacentBoxes(Boxc) {
console.log(55)
console.log(Boxc);
var backgroundImage1 = document.querySelector(`.box-${Boxc+1}`).style.backgroundImage;
if(Boxc-1>=0){
var backgroundImage2 = document.querySelector(`.box-${Boxc-1}`).style.backgroundImage;}
else{
  var backgroundImage2="notexist";
}
var left = backgroundImage2.includes("none");
var right = backgroundImage1.includes("none");
blue();
if (Boxc - 1 >= 0 && left ) {
console.log(8778);
document.querySelector(`.box-${Boxc - 1}`).style.backgroundColor = "green";
}
if (Boxc + 1 <= 40 && right) {
document.querySelector(`.box-${Boxc + 1}`).style.backgroundColor = "green";}


function Remove(){
if(Boxc - 1>0 ){
  console.log(Boxc - 1)
document.querySelector(`.box-${Boxc - 1}`).removeEventListener('click', leftClickListener);
document.querySelector(`.box-${Boxc + 1}`).removeEventListener('click', rightClickListener);

}else{
document.querySelector(`.box-${Boxc + 1}`).removeEventListener('click', rightClickListener);
}
}

function leftClickListener(event) {
console.log(33223)
if (Boxc - 1 >= 0) {
  document.querySelector(`.box-${Boxc - 1}`).style.backgroundColor = "#64c5e6";
}
document.querySelector(`.box-${Boxc + 1}`).style.backgroundColor = "#64c5e6";
if (Boxc >= 0 && left) {
moveR(Boxc, -1);}
Remove(Boxc);
}

function rightClickListener(event) {
if (Boxc - 1 >= 0) {
  document.querySelector(`.box-${Boxc - 1}`).style.backgroundColor = "#64c5e6";
}
document.querySelector(`.box-${Boxc + 1}`).style.backgroundColor = "#64c5e6";
if (Boxc < 8 && right) {
moveR(Boxc , +1);}
Remove(Boxc);
                                         
}

if (Boxc - 1 >= 0) {
console.log(9090809)
document.querySelector(`.box-${Boxc - 1}`).addEventListener('click', leftClickListener);
}
if (Boxc + 1 <= 7) {
console.log(7900)
document.querySelector(`.box-${Boxc + 1}`).addEventListener('click', rightClickListener);

}

}
function clickHandlerc(event) {
console.log(event.target.className);
var Boxc = parseInt(event.target.className.match(/\d+/)[0], 10);
highlightAdjacentBoxes(Boxc);


}
    
//---------------------------------------------------------------------------------------------------------------------------------------------
//function titan(){
  var lol=0;
function setupObjectMovement(BoxN, imgUrl) {
console.log(78);
document.querySelector(`.box-${BoxN}`).addEventListener('click', clickHandler);

function move(BoxN,imgUrl,pos) {
  if (BoxN - 8 >= 0) {
    document.querySelector(`.box-${BoxN - 8}`).style.backgroundColor = "#64c5e6";
}if (BoxN + 8 <= 63) {
     document.querySelector(`.box-${BoxN + 8}`).style.backgroundColor = "#64c5e6";}
if (BoxN -1 >=0) {
     document.querySelector(`.box-${BoxN - 1}`).style.backgroundColor = "#64c5e6";}
if (BoxN + 1 <= 63) {
       document.querySelector(`.box-${BoxN + 1}`).style.backgroundColor = "#64c5e6";}
  document.querySelector(`.box-${BoxN}`).removeEventListener('click', clickHandler);
      document.querySelector(`.box-${BoxN}`).style.backgroundImage = "none";
      document.querySelector(`.box-${BoxN +(pos)}`).style.backgroundImage = imgUrl;
      BoxN = BoxN +(pos);
      updatea(BoxN,imgUrl);
     if (imgUrl === "url('tri.svg')" ) {
    o=BoxN;
    lol=BoxN;
    updateRotation(lol);
    document.querySelector(`.box-${BoxN-(pos)}`).style.transform = 'rotate(0deg)';
}
       flags.shield=1;
       Shoot();

}

function updatea(BoxN,imgUrl){
  if (imgUrl === "url('CANON1.svg')") {
    x=BoxN;
  } else if (imgUrl === "url('shield.png')" ) {
    y=BoxN;
}
else if (imgUrl === "url('rok1.svg')" || imgUrl === "url('rok.svg')"  ) {
  z=BoxN;
  if(rok==1)document.querySelector(`.box-${BoxN}`).style.backgroundImage ="url('rok.svg')";
  leu(BoxN);
}
document.querySelector(`.box-${BoxN}`).addEventListener('click', clickHandler);
}


function highlightAdjacentBoxes(BoxN, imgUrl) {
  if(BoxN+8<=63){
    var backgroundImage3 = document.querySelector(`.box-${BoxN+8}`).style.backgroundImage;
  }else{
    var backgroundImage3="not exist";}
  if(BoxN+1<=63){
    var backgroundImage1 = document.querySelector(`.box-${BoxN+1}`).style.backgroundImage;}
  else{
        var backgroundImage1="not exist";}
 if(BoxN-1>=0){var backgroundImage2 = document.querySelector(`.box-${BoxN-1}`).style.backgroundImage;}
  else{
    var backgroundImage2="not exist";
  }
  if(BoxN-8>=0){
  var backgroundImage4 = document.querySelector(`.box-${BoxN-8}`).style.backgroundImage;
}else{
  var backgroundImage4="notexist"}

  var top = backgroundImage4.includes("none");
  var left = backgroundImage2.includes("none");
  var right = backgroundImage1.includes("none");
  var down = backgroundImage3.includes("none");

blue();
console.log(imgUrl);
if (BoxN - 1 >= 0 && left) {
document.querySelector(`.box-${BoxN - 1}`).style.backgroundColor = "green";
}
if (BoxN + 1 <= 63 && right) {
  console.log(80808080)
document.querySelector(`.box-${BoxN + 1}`).style.backgroundColor = "green";
}

if (BoxN - 8 >= 0 && top) {
document.querySelector(`.box-${BoxN - 8}`).style.backgroundColor = "green";
}
if (BoxN + 8 <= 63 && down) {
document.querySelector(`.box-${BoxN + 8}`).style.backgroundColor = "green";
}

function Remove(){
for(let i =0; i<=63; i++){
  document.querySelector(`.box-${i}`).removeEventListener('click', leftClickListener);
  document.querySelector(`.box-${i}`).removeEventListener('click', rightClickListener);
  document.querySelector(`.box-${i}`).removeEventListener('click', upClickListener);
  document.querySelector(`.box-${i}`).removeEventListener('click', downClickListener);
}
}
function leftClickListener(event) {
if(document.querySelector(`.box-${BoxN - 1}`).style.backgroundColor === "green"){
  if (BoxN >=1 && left ) {
    move(BoxN , imgUrl,-1);}}
Remove(BoxN , imgUrl);
}

function rightClickListener(event) {
if(document.querySelector(`.box-${BoxN + 1}`).style.backgroundColor === "green"){
  if (BoxN < 63 && right) {
move(BoxN , imgUrl , 1);}}
Remove(BoxN , imgUrl);
                                         
}

function upClickListener(event) {
if(document.querySelector(`.box-${BoxN - 8}`).style.backgroundColor === "green"){
  if(BoxN>=8 && top){
move(BoxN , imgUrl ,-8)}}
Remove(BoxN, imgUrl);

}

function downClickListener(event) {
if(document.querySelector(`.box-${BoxN + 8}`).style.backgroundColor === "green"){
  if (BoxN <= 55 && down ) {
move(BoxN , imgUrl , 8);}}
Remove(BoxN , imgUrl);

}

if (BoxN - 1 >= 0) {
document.querySelector(`.box-${BoxN - 1}`).addEventListener('click', leftClickListener);
}
if (BoxN + 1 <= 63) {
document.querySelector(`.box-${BoxN + 1}`).addEventListener('click', rightClickListener);
}
if (BoxN - 8 >= 0) {
document.querySelector(`.box-${BoxN - 8}`).addEventListener('click', upClickListener);
}
if (BoxN + 8 <= 63) {
document.querySelector(`.box-${BoxN + 8}`).addEventListener('click', downClickListener);
}

}
function clickHandler(event) {
var BoxN = parseInt(event.target.className.match(/\d+/)[0], 10);
var backgroundImage = document.querySelector(`.box-${BoxN}`).style.backgroundImage;
if (  backgroundImage.includes("shield.png") || backgroundImage.includes("CANON1.svg") || backgroundImage.includes("rok1.svg") || backgroundImage.includes("rok.svg") || backgroundImage.includes("tri.svg") ) {
console.log(1);
highlightAdjacentBoxes(BoxN, imgUrl);
}
}
}

var pos = [10,12,13,15];
var x=pos[1];
var y=pos[0];
var z=pos[2];
console.log(z);
var o = pos[3];


document.querySelector(`.box-${x}`).addEventListener('click', setupObjectMovement(x, "url('CANON1.svg')"));
document.querySelector(`.box-${y}`).addEventListener('click', setupObjectMovement(y, "url('shield.png')"));
document.querySelector(`.box-${z}`).addEventListener('click', setupObjectMovement(z, "url('rok1.svg')"));
document.querySelector(`.box-${o}`).addEventListener('click', setupObjectMovement(o, "url('tri.svg')"));

function leu(l){
document.querySelector(`.box-${l}`).addEventListener('click', function(event){
document.querySelectorAll(".but")[0].style.visibility="visible";
document.querySelectorAll(".but")[1].style.visibility="visible";
document.querySelectorAll(".xv")[0].style.visibility="hidden";
document.querySelectorAll(".xv")[1].style.visibility="hidden";
document.querySelectorAll(".xvb")[0].style.visibility="hidden";
document.querySelectorAll(".xvb")[1].style.visibility="hidden";
});
}
leu(13);
var rok=0;
function but1(direction) {
  findDivWithImage();
let  div=inp[0];
if (direction === 'right') {
console.log(1);

document.querySelector(`.box-${div}`).style.backgroundImage = "url('rok1.svg')";
rok=0;
blue();
document.querySelectorAll(".but")[0].style.visibility="hidden";
   document.querySelectorAll(".but")[1].style.visibility="hidden"; 
} else if (direction === 'left') {
console.log(1);
document.querySelector(`.box-${div}`).style.backgroundImage = "url('rok.svg')";
rok=1;
blue();
document.querySelectorAll(".but")[0].style.visibility="hidden";
   document.querySelectorAll(".but")[1].style.visibility="hidden"; 
}
}

function visible(){
    document.querySelectorAll(".xv")[0].style.visibility="visible";
    document.querySelectorAll(".xv")[1].style.visibility="visible";
    document.querySelectorAll(".but")[0].style.visibility="hidden";
   document.querySelectorAll(".but")[1].style.visibility="hidden"; 
   document.querySelectorAll(".butb")[0].style.visibility="hidden";
   document.querySelectorAll(".butb")[1].style.visibility="hidden"; 
   leu(inp[0]);   
}

var tri=15;
function click(){
  document.querySelector(`.box-${tri}`).addEventListener('click', visible);
  for (let i = 0; i <= 63; i++) {
    if (i === tri) {
        continue; //skoip tr
    }
    document.querySelector(`.box-${i}`).removeEventListener('click', visible);
}}

click();

let rotation = 0;
if(rotation==360 || rotation==-360){
  rotation=0;
}
function rotateLeft() {
  rotation -= 90; 
  if(rotation==360 || rotation==-360){
    rotation=0;
  }
  updateRotation(tri);
  console.log(rotation)
}

function rotateRight() {
  rotation += 90; 
  if(rotation==360 || rotation==-360){
    rotation=0;
  }
  updateRotation(tri);
  console.log(rotation)
}

function updateRotation(lol) {
  document.querySelector(`.box-${lol}`).style.transform = `rotate(${rotation}deg)`;
  tri=lol;
  blue();
  click();
  document.querySelectorAll(".xv")[0].style.visibility="hidden";
document.querySelectorAll(".xv")[1].style.visibility="hidden";

}

























////////////////////////////////////////////////////////////////////////////////////////// SIDE BBB/////////////////////////////////////



function moveLeftb(Boxb , left) {
console.log(left)
if (Boxb >= 55 && left) {
console.log(700);
  // Change the background color of the left box to green
  document.querySelector(`.box-${Boxb - 1}`).style.backgroundColor = "#64c5e6";
  if(Boxb + 1<=63){
    document.querySelector(`.box-${Boxb + 1}`).style.backgroundColor = "#64c5e6";}
  document.querySelector(`.box-${Boxb}`).removeEventListener('click', clickHandlerb);

      document.querySelector(`.box-${Boxb}`).style.backgroundImage = "none";
      document.querySelector(`.box-${Boxb - 1}`).style.backgroundImage = "url('canon2.svg')";
      
    //   console.log(4554)
       Boxb = Boxb - 1;
     // pos = Boxc;
      document.querySelector(`.box-${Boxb}`).addEventListener('click', clickHandlerb);
     /*var nt =  document.querySelector('.bullet').style.left;
       var n = parseInt(nt, 10);
       n= n-100
       document.querySelector('.bullet').style.left= n + "px";
       flags.shield=1;
       Shoot();*/
      
      // Call the move function recursively
      //moveLeft(Box1);

}
}

// Move the image to the right
function moveRightb(Boxb , right ) {

if (Boxb < 63 && right) {
 // Change the background color of the left box to green
 document.querySelector(`.box-${Boxb - 1}`).style.backgroundColor = "#64c5e6";
 if(Boxb + 1<=63){
 document.querySelector(`.box-${Boxb + 1}`).style.backgroundColor = "#64c5e6";}
 // Add an event listener to the left box
 document.querySelector(`.box-${Boxb}`).removeEventListener('click', clickHandlerb);

     document.querySelector(`.box-${Boxb}`).style.backgroundImage = "none";
     document.querySelector(`.box-${Boxb + 1}`).style.backgroundImage = "url('canon2.svg')";
     Boxb= Boxb + 1;
    // pos = Boxc;
     console.log(4554)
     document.querySelector(`.box-${Boxb}`).addEventListener('click', clickHandlerb);
     
     /* var mt =  document.querySelector('.bullet').style.left;
      var m = parseInt(mt, 10);
      m= m+100;
      document.querySelector('.bullet').style.left= m + "px";
      flags.shield=1;
      Shoot(); */
    
}
}

var currentBoxb = 63;

document.querySelector(`.box-${currentBoxb}`).addEventListener('click', clickHandlerb);

function highlightAdjacentBoxesb(Boxb) {
//console.log(55)
//console.log(Boxb);
if(Boxb+1<63){
var backgroundImage1 = document.querySelector(`.box-${Boxb+1}`).style.backgroundImage;}
else{
  var backgroundImage1 = "none"}
var backgroundImage2 = document.querySelector(`.box-${Boxb-1}`).style.backgroundImage;
var left = backgroundImage2.includes("none");
var right = backgroundImage1.includes("none");
blue();
if (Boxb - 1 > 55 && left ) {
console.log(8778);
document.querySelector(`.box-${Boxb - 1}`).style.backgroundColor = "green";
}
if (Boxb + 1 <= 63 && right) {
document.querySelector(`.box-${Boxb + 1}`).style.backgroundColor = "green";}


function Removeb(){
if(Boxb - 1>55 ){
document.querySelector(`.box-${Boxb - 1}`).removeEventListener('click', leftClickListenerb);
if (Boxb + 1 <= 63){
document.querySelector(`.box-${Boxb + 1}`).removeEventListener('click', rightClickListenerb);}

}else{
document.querySelector(`.box-${Boxb + 1}`).removeEventListener('click', rightClickListenerb);
}
}

function leftClickListenerb(event) {
console.log(33223)
if (Boxb - 1 > 55) {
  document.querySelector(`.box-${Boxb - 1}`).style.backgroundColor = "#64c5e6";
}if(Boxb+1<63){
document.querySelector(`.box-${Boxb + 1}`).style.backgroundColor = "#64c5e6";}
moveLeftb(Boxb, left);
Removeb(Boxb);
}

function rightClickListenerb(event) {
if (Boxb - 1 >=55) {
  document.querySelector(`.box-${Boxb - 1}`).style.backgroundColor = "#64c5e6";
}if(Boxb+1<63){
document.querySelector(`.box-${Boxb + 1}`).style.backgroundColor = "#64c5e6";}
moveRightb(Boxb , right);   
Removeb(Boxb);
                                         
}

if (Boxb - 1 > 55) {
console.log(9090809)
document.querySelector(`.box-${Boxb - 1}`).addEventListener('click', leftClickListenerb);
}
if (Boxb + 1 <= 63) {
console.log(7900)
document.querySelector(`.box-${Boxb + 1}`).addEventListener('click', rightClickListenerb);

}
}
function clickHandlerb(event) {
//console.log(event.target.className);
var Boxb = parseInt(event.target.className.match(/\d+/)[0], 10);
highlightAdjacentBoxesb(Boxb);
}
    
//---------------------------------------------------------------------------------------------------------------------------------------------
//function titan(){
var lolb=0;
function setupObjectMovementb(BoxNb, imgUrlb) {
console.log(78);
document.querySelector(`.box-${BoxNb}`).addEventListener('click', clickHandlerb);

function moveb(BoxNb,imgUrlb,posu) {

  if (BoxNb - 8 >= 0) {
    document.querySelector(`.box-${BoxNb - 8}`).style.backgroundColor = "#64c5e6";
}if (BoxNb + 8 <= 63) {
     document.querySelector(`.box-${BoxNb + 8}`).style.backgroundColor = "#64c5e6";}
if (BoxNb -1 >=0) {
     document.querySelector(`.box-${BoxNb - 1}`).style.backgroundColor = "#64c5e6";}
if (BoxNb + 1 <= 63) {
       document.querySelector(`.box-${BoxNb + 1}`).style.backgroundColor = "#64c5e6";}
  document.querySelector(`.box-${BoxNb}`).removeEventListener('click', clickHandlerb);
      document.querySelector(`.box-${BoxNb}`).style.backgroundImage = "none";
      document.querySelector(`.box-${BoxNb +(posu)}`).style.backgroundImage = imgUrlb;
      BoxNb = BoxNb +(posu);
      updateb(BoxNb,imgUrlb);
      if (imgUrlb === "url('tri2.svg')" ) {
        ob=BoxNb;
        lolb=BoxNb;
        updateRotationb(lolb);
        document.querySelector(`.box-${BoxNb-(posu)}`).style.transform = 'rotate(0deg)'; 
        }
       // flags.shield=1;
       // Shoot();

}
function updateb(BoxNb,imgUrlb){
  if (imgUrlb === "url('shield2.svg')" ) {
    xb=BoxNb;
  } else if (imgUrlb === "url('castle2.svg')") {
    yb=BoxNb;
}
else if (imgUrlb === "url('rok2.svg')" || imgUrlb === "url('rok3.svg')"  ) {
  zb=BoxNb;
  if(rokb==1)document.querySelector(`.box-${BoxNb}`).style.backgroundImage ="url('rok3.svg')";
  leub(BoxNb);
}
  document.querySelector(`.box-${BoxNb}`).addEventListener('click', clickHandlerb);
}



function highlightAdjacentBoxesb(BoxNb, imgUrlb) {
  if(BoxNb+1<=63){
    var backgroundImage1 = document.querySelector(`.box-${BoxNb+1}`).style.backgroundImage;
  } else{
    var backgroundImage1="notexist";
  }
  if(BoxNb-1>=0){ var backgroundImage2 = document.querySelector(`.box-${BoxNb-1}`).style.backgroundImage;}
  else{
    var backgroundImage2="notexist";}
  if(BoxNb-8>=0){
  var backgroundImage4 = document.querySelector(`.box-${BoxNb-8}`).style.backgroundImage;
} else{
  var backgroundImage4="notexist";
}
if(BoxNb+8<=63){
  var backgroundImage3 = document.querySelector(`.box-${BoxNb+8}`).style.backgroundImage;}
  else{
    var backgroundImage3="notexist";}


  var leftb = backgroundImage2.includes("none");
  var rightb = backgroundImage1.includes("none");
  var topb = backgroundImage4.includes("none");
  var downb = backgroundImage3.includes("none");

blue();
console.log(imgUrlb);
if (BoxNb - 1 >= 0 && leftb) {
document.querySelector(`.box-${BoxNb - 1}`).style.backgroundColor = "green";
}
if (BoxNb + 1 <= 63 && rightb) {
document.querySelector(`.box-${BoxNb+ 1}`).style.backgroundColor = "green";
}

if (BoxNb - 8 >= 0 && topb) {
document.querySelector(`.box-${BoxNb - 8}`).style.backgroundColor = "green";
}
if (BoxNb + 8 <= 63 && downb) {
document.querySelector(`.box-${BoxNb + 8}`).style.backgroundColor = "green";
}

function Removeb(){
for(let i =0; i<=63; i++){
  document.querySelector(`.box-${i}`).removeEventListener('click', leftClickListenerb);
  document.querySelector(`.box-${i}`).removeEventListener('click', rightClickListenerb);
  document.querySelector(`.box-${i}`).removeEventListener('click', upClickListenerb);
  document.querySelector(`.box-${i}`).removeEventListener('click', downClickListenerb);
}
}


function leftClickListenerb(event) {
  
if(document.querySelector(`.box-${BoxNb - 1}`).style.backgroundColor === "green"){
  if (BoxNb>0 && leftb) {
moveb(BoxNb , imgUrlb ,-1);}}
Removeb(BoxNb , imgUrlb);
}

function rightClickListenerb(event) {
if(document.querySelector(`.box-${BoxNb + 1}`).style.backgroundColor === "green"){
  if (BoxNb<=62 && rightb) {
moveb(BoxNb , imgUrlb,1);}}

Removeb(BoxNb , imgUrlb);
                                         
}

function upClickListenerb(event) {

if(document.querySelector(`.box-${BoxNb - 8}`).style.backgroundColor === "green"){
  if(BoxNb>=7 && topb){
moveb(BoxNb , imgUrlb , -8);}}
Removeb(BoxNb, imgUrlb);

}

function downClickListenerb(event) {
if(document.querySelector(`.box-${BoxNb + 8}`).style.backgroundColor === "green"){
  if (BoxNb <=55 && downb ){
moveb(BoxNb , imgUrlb , +8);}}
Removeb(BoxNb , imgUrlb);

}

if (BoxNb - 1 >= 0) {
document.querySelector(`.box-${BoxNb - 1}`).addEventListener('click', leftClickListenerb);
}
if (BoxNb + 1 <= 63) {
document.querySelector(`.box-${BoxNb + 1}`).addEventListener('click', rightClickListenerb);
}
if (BoxNb - 8 >= 0) {
document.querySelector(`.box-${BoxNb- 8}`).addEventListener('click', upClickListenerb);
}
if (BoxNb + 8 <= 63) {
document.querySelector(`.box-${BoxNb + 8}`).addEventListener('click', downClickListenerb);
}

}
function clickHandlerb(event) {
var BoxNb = parseInt(event.target.className.match(/\d+/)[0], 10);
var backgroundImage = document.querySelector(`.box-${BoxNb}`).style.backgroundImage;
if (backgroundImage.includes("shield2.svg") || backgroundImage.includes("castle2.svg") || backgroundImage.includes("rok2.svg") || backgroundImage.includes("rok3.svg") || backgroundImage.includes("tri2.svg") ) {
console.log(1);
highlightAdjacentBoxesb(BoxNb, imgUrlb);}
} 

}
var posb = [49,52,54,50];
var xb=posb[1];
var yb=posb[0];
var zb=posb[2];
var ob=posb[3];


document.querySelector(`.box-${xb}`).addEventListener('click', setupObjectMovementb(xb, "url('shield2.svg')"));
document.querySelector(`.box-${yb}`).addEventListener('click', setupObjectMovementb(yb,"url('castle2.svg')" ));
document.querySelector(`.box-${zb}`).addEventListener('click', setupObjectMovementb(zb, "url('rok2.svg')"));
document.querySelector(`.box-${ob}`).addEventListener('click', setupObjectMovementb(ob, "url('tri2.svg')"));


var inpb =[];
function findDivWithImageb() {
  for (let i = 0; i <= 63; i++) {
      var div = document.querySelector(`.box-${i}`).style.backgroundImage;
      if (div.includes("rok2.svg") || div.includes("rok3.svg")) {
          inpb[0] = i;
      }}
    }
    findDivWithImageb();    
function leub(lb){
  console.log(lb);
  document.querySelector(`.box-${lb}`).addEventListener('click', function(event){
  document.querySelectorAll(".butb")[0].style.visibility="visible";
  document.querySelectorAll(".butb")[1].style.visibility="visible";
  document.querySelectorAll(".xvb")[0].style.visibility="hidden";
  document.querySelectorAll(".xvb")[1].style.visibility="hidden";
  });
  }
  leub(50);
  var rokb=0;
  function but1b(direction) {
    findDivWithImageb();
  let  divb=inpb[0];
  if (direction === 'right') {
  console.log(1);
  
  document.querySelector(`.box-${divb}`).style.backgroundImage = "url('rok2.svg')";
  rokb=0;
  blue();
  document.querySelectorAll(".butb")[0].style.visibility="hidden";
     document.querySelectorAll(".butb")[1].style.visibility="hidden"; 
  } else if (direction === 'left') {
  console.log(1);
  document.querySelector(`.box-${divb}`).style.backgroundImage = "url('rok3.svg')";
  rokb=1;
  blue();
  document.querySelectorAll(".butb")[0].style.visibility="hidden";
     document.querySelectorAll(".butb")[1].style.visibility="hidden"; 
  }
  }
  



  function visibleb(){
      document.querySelectorAll(".xvb")[0].style.visibility="visible";
      document.querySelectorAll(".xvb")[1].style.visibility="visible";
      document.querySelectorAll(".butb")[0].style.visibility="hidden";
     document.querySelectorAll(".butb")[1].style.visibility="hidden"; 
     console.log(inpb[0])
     leub(inpb[0]);   
  }
  var trib=50;
  function clickb(){
    document.querySelector(`.box-${trib}`).addEventListener('click', visibleb);
    for (let i = 0; i <= 63; i++) {
      if (i === trib) {
          continue; //skoip tr
      }
      document.querySelector(`.box-${i}`).removeEventListener('click', visibleb);
  }}
  
  clickb();
  
  let rotationb = 0;
  if(rotationb==360 || rotationb==-360){
    rotationb=0;
  }
  function rotateLeftb() {
    rotationb -= 90; 
    if(rotationb==360 || rotationb==-360){
      rotationb=0;
    }
    updateRotationb(trib);
    console.log(rotationb)
  }
  
  function rotateRightb() {
    rotationb += 90; 
    if(rotationb==360 || rotationb==-360){
      rotationb=0;
    }
    updateRotationb(trib);
    console.log(rotationb)
  }
  
  function updateRotationb(lolb) {
    document.querySelector(`.box-${lolb}`).style.transform = `rotate(${rotationb}deg)`;
    trib=lolb;
    blue();
    clickb();
    document.querySelectorAll(".xvb")[0].style.visibility="hidden";
  document.querySelectorAll(".xvb")[1].style.visibility="hidden";
    
  }
  
  








